name: ninja aseprite
on:
  repository_dispatch:
    types: [build]
  workflow_dispatch:
      inputs:
        name:
          description: 'Run?'
          required: true
          default: 'YES!'
jobs:
  build-win:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: Get Download Links
      run: |
        echo "::set-output name=action_ase::$(iwr https://api.github.com/repos/aseprite/aseprite/releases/latest | Select -ExpandProperty Content | jq -r '.assets[].browser_download_url')"
        echo "::set-output name=action_skia::$(iwr https://api.github.com/repos/aseprite/skia/releases/latest | Select -ExpandProperty Content | jq -r '.assets[].browser_download_url' | findstr Windows | findstr 64)"
        echo "::set-output name=action_tg::$(iwr https://api.github.com/repos/aseprite/aseprite/releases/latest | Select -ExpandProperty Content | jq -r '.tag_name')"
      id: links
    - name: Clone aseprite source
      run: |
        git clone --recursive https://github.com/aseprite/aseprite.git aseprite
    - name: Download compiled skia
      run: |
        iwr -outf skia.zip ${{ steps.links.outputs.action_skia }}
        7z x skia.zip -y -oskia | findstr ing
    - name: Find path
      id: path
      run: echo "::set-output name=working_path::$(pwd | findstr \)"
    - name: Setup MSVC Developer Command Prompt
      uses: TheMrMilchmann/setup-msvc-dev@v2.0.0
      with:
        arch: x64
        sdk: 10.0.18362.0
    - name: Compiling aseprite for Windows
      run: |
        cd aseprite
        mkdir build
        cd build
        cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DLAF_BACKEND=skia -DSKIA_DIR=${{ steps.path.outputs.working_path }}\skia -DSKIA_LIBRARY_DIR=${{ steps.path.outputs.working_path }}\skia\out\Release-x64 -DSKIA_LIBRARY=${{ steps.path.outputs.working_path }}\skia\out\Release-x64\skia.lib -G Ninja ..
        ninja aseprite
    - name: Archive bin
      run: |
        cd aseprite\build\bin
        rm gen*
        rm mod*
        7z -tzip a Aseprite-win-x64.zip * -mx0 | findstr ing
        cd ..\..\..
        mv aseprite\build\bin\Aseprite-win-x64.zip .
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v2
      with:
        path: Aseprite-win-x64.zip
  build-linux:
    runs-on: 	ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install -y g++ clang-10 libc++-10-dev libc++abi-10-dev cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev
      - name: Get Download Links
        run: |
          echo "::set-output name=action_ase::$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r '.assets[].browser_download_url')"
          echo "::set-output name=action_skia::$(curl -sL https://api.github.com/repos/aseprite/skia/releases/latest | jq -r '.assets[].browser_download_url' | grep Linux | grep 64)"
          echo "::set-output name=action_tag::$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r '.tag_name')"
        id: links
      - name: Clone aseprite source
        run: |
          wget -q -O aseprite.zip ${{ steps.links.outputs.action_ase }}
          7z x aseprite.zip -oaseprite | grep ing
      - name: Download compiled skia
        run: |
          wget -q -O skia.zip ${{ steps.links.outputs.action_skia }}
          7z x skia.zip -y -oskia | grep ing
      - name: Find path
        id: path
        run: echo "::set-output name=working_path::$(pwd)"
      - name: Compiling aseprite for linux
        run: |
           cd aseprite
           mkdir build
           cd build
           export CC=clang
           export CXX=clang++
           cmake \
            -Wno-dev \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_CXX_FLAGS:STRING=-stdlib=libc++ \
            -DCMAKE_EXE_LINKER_FLAGS:STRING=-stdlib=libc++ \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=${{ steps.path.outputs.working_path }}/skia \
            -DSKIA_LIBRARY_DIR=${{ steps.path.outputs.working_path }}/skia/out/Release-x64 \
            -DSKIA_LIBRARY=.${{ steps.path.outputs.working_path }}/skia/out/Release-x64/libskia.a \
            -G Ninja \
            ..
           ninja aseprite
      - name: Package deb
        run: |
           mkdir deb-frame/usr/share/aseprite
           cp -r aseprite/build/bin/* deb-frame/usr/share/aseprite/
           dpkg -b deb-frame Aseprite-ubuntu_amd64.deb
      - name: Upload linux artifact
        uses: actions/upload-artifact@v2
        with:
          path: Aseprite-ubuntu_amd64.deb
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Download Links
      run: |
        brew install ninja
        pip install lastversion
        export GITHUB_API_TOKEN=${{ secrets.WORK1 }}
        echo "::set-output name=action_ase::$(lastversion --format assets aseprite/aseprite)"
        echo "::set-output name=action_tag::$(lastversion aseprite/aseprite)"
      id: links
    - name: Clone aseprite source
      run: |
        git clone --recursive https://github.com/aseprite/aseprite.git aseprite
    - name: Download compiled skia
      run: |
        wget -q -O skia.zip https://github.com/aseprite/skia/releases/latest/download/Skia-macOS-Release-x64.zip
        7z x skia.zip -y -oskia | grep ing
    - name: Find path
      id: path
      run: echo "::set-output name=working_path::$(pwd)"
    - name: Compiling aseprite for macOS
      run: |
        cd aseprite/
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_OSX_ARCHITECTURES=x86_64 \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=${{ steps.path.outputs.working_path }}/skia \
          -DSKIA_LIBRARY_DIR=${{ steps.path.outputs.working_path }}/skia/out/Release-x64 \
          -DSKIA_LIBRARY=${{ steps.path.outputs.working_path }}/skia/out/Release-x64/libskia.a \
          -G Ninja \
          -Wno-dev \
          ..
        ninja aseprite
    - name: Archive bin
      run: |
        cd aseprite/build/bin
        7z -tzip a Aseprite-mac-x64.zip * -mx0 | grep ing
        cd ../../..
        mv aseprite/build/bin/Aseprite-mac-x64.zip .
    - name: Upload macos artifact
      uses: actions/upload-artifact@v2
      with:
          path: Aseprite-mac-x64.zip
  Upload:
    needs: [build-win,  build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Get tag
      run: echo "::set-output name=atb::$(cat release-versions/version.json)"
      id: links
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.links.outputs.atb }}
        name: Aseprite ${{ steps.links.outputs.atb }}
        files: |
          artifact/Aseprite-win-x64.zip
          artifact/Aseprite-mac-x64.zip
          artifact/Aseprite-ubuntu_amd64.deb
        body: |
          Unofficial dev release.
          Support [official version](https://www.aseprite.org/download)
      env:
        GITHUB_TOKEN: ${{ secrets.work1 }}
